name: Test, Publish i8 Terminal to PyPi and Release MSI
on: [pull_request, push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: x64

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-v1-test
          restore-keys: ${{ runner.os }}-v1-test

      - run: pip3 install -r requirements-dev.txt
      - run: pyflakes i8_terminal/
      - run: black --check i8_terminal/
      - run: isort --check i8_terminal/
      - run: mypy i8_terminal/

  publish_pypi:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: x64

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-v1-test
          restore-keys: ${{ runner.os }}-v1-test

      - name: Build package & publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          pip3 install -r requirements.txt
          pip3 install twine==4.0.0
          python setup.py sdist
          twine upload dist/i8-terminal-$(python setup.py -V).tar.gz

  publish_ghdoc:
    runs-on: ubuntu-latest
    needs: [test, publish_pypi]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: x64

      - name: Build documentation & publish to ghpages
        run: |
          pip3 install mkdocs
          pip3 install mkdocs-click
          pip3 install mkdocs-material
          pip3 install i8-terminal
          mkdocs gh-deploy --force --clean --verbose
  publish_msi_win:
    runs-on: windows-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: x64

      - name: Build package & create msi
        run: |
          pip3 install -r requirements-pub.txt
          python setup_cx.py bdist_msi

      - name: Release MSI
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: Release $(python setup.py -V)
          tag_name: v$(python setup.py -V)
          body: |
            Changes in this Release
            - First Change
            - Second Change
          #body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/i8-terminal-$(python setup.py -V)-win64.msi
          asset_name: i8-terminal$(python setup.py -V).msi
          asset_content_type: application/msi